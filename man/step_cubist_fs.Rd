% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_cubist_fs.R
\name{step_cubist_fs}
\alias{step_cubist_fs}
\title{Select From Feature Importances (Cubist)}
\usage{
step_cubist_fs(recipe, ..., target = NULL, role = "predictor",
  trained = FALSE, trees = 100, neighbors = 0, num_comp = NULL,
  threshold = NULL, to_retain = NULL, scores = NULL, skip = FALSE,
  id = rand_id("cubist_fs"))
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence of
operations for this recipe}

\item{...}{One or more selector functions to choose which variables are
affected by the step. See selections() for more details. For the tidy
method, these are not currently used}

\item{target}{name of response variable to use to evaluate information gain
value against the predictors}

\item{role}{Not used by this step since no new variables are created}

\item{trained}{A logical to indicate if the quantities for preprocessing have
been estimated}

\item{trees}{numeric, number of boosting iterations}

\item{neighbors}{numeric, default is 0}

\item{num_comp}{numeric, the number of best scoring features to select}

\item{threshold}{numeric, percentile of best features to select. Note that
this overrides num_comp}

\item{to_retain}{character, names of features to retain}

\item{scores}{tibble, tibble of feature importance scores}

\item{skip}{A logical. Should the step be skipped when the recipe is baked by
bake.recipe()? While all operations are baked when prep.recipe() is run,
some operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when using skip =
TRUE as it may affect the computations for subsequent operations}

\item{id}{A character string that is unique to this step to identify it}
}
\value{
a step_cubist_fs object
}
\description{
Feature selection step based on Cubust feature importance scores
}
