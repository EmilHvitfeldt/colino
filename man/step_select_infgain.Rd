% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_select_infgain.R
\name{step_select_infgain}
\alias{step_select_infgain}
\alias{tidy.step_select_infgain}
\title{Information gain feature selection step}
\usage{
step_select_infgain(
  recipe,
  ...,
  outcome = NULL,
  role = NA,
  trained = FALSE,
  top_p = NA,
  threshold = NA,
  type = "infogain",
  threads = 1,
  exclude = NULL,
  scores = NULL,
  skip = FALSE,
  id = recipes::rand_id("select_infgain")
)

\method{tidy}{step_select_infgain}(x, ...)
}
\arguments{
\item{recipe}{A recipe object. The step will be added to the sequence of
operations for this recipe.}

\item{...}{One or more selector functions to choose which variables are
affected by the step. See selections() for more details. For the tidy
method, these are not currently used.}

\item{outcome}{A character string with the name of the response variable to
use to evaluate information gain value against the predictors.}

\item{role}{Not used by this step since no new variables are created.}

\item{trained}{A logical to indicate if the quantities for preprocessing have
been estimated.}

\item{top_p}{An integer with the number of best scoring features to
select.}

\item{threshold}{A numeric value between 0 and 1 representing the percentile
of best scoring features to select. Features with scores that are _larger_
than the specified threshold will be retained, for example `threshold =
0.9` will retain only predictors with scores in the top 90th percentile.
Note that this overrides `top_p`.}

\item{type}{A character string specifying the information gain method to use.
One of "infogain", "gainratio", "symuncert". The default is 'infogain'.}

\item{threads}{An integer specifying the number of threads to use for
processing. The default = 0 uses all available threads.}

\item{exclude}{A character vector of predictor names that will be removed
from the data. This will be set when `prep()` is used on the recipe and
should not be set by the user.}

\item{scores}{A tibble with 'variable' and 'scores' columns containing the
names of the variables and their information gain scores. This parameter is
only produced after the recipe has been trained.}

\item{skip}{A logical. Should the step be skipped when the recipe is baked by
bake.recipe()? While all operations are baked when prep.recipe() is run,
some operations may not be able to be conducted on new data (e.g.
processing the outcome variable(s)). Care should be taken when using skip =
TRUE as it may affect the computations for subsequent operations.}

\item{id}{A character string that is unique to this step to identify it.}

\item{x}{A `step_select_infgain` object.}
}
\value{
A step_select_infgain object.
}
\description{
`step_select_infgain` creates a *specification* of a recipe step that selects a
subset of predictors based on the scores of the information gain algorithm.
This step requires the FSelectorRcpp package to be installed. The top
`top_p` scoring features, or features whose scores occur in the top
percentile `threshold` will be retained as new predictors.
}
\details{
The recipe will stop if both `top_p` and `threshold` are left unspecified.
}
\examples{
library(recipes)

data(cells, package = "modeldata")

rec <-
 recipe(class ~ ., data = cells[, -1]) \%>\%
 step_select_infgain(all_predictors(), outcome = "class", top_p = 10, threshold = 0.9)

prepped <- prep(rec)

new_data <- juice(prepped)
prepped
}
\concept{preprocessing}
\concept{supervised_filter}
\keyword{datagen}
